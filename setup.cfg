[metadata]
name = pydsdl
version = attr: pydsdl.__version__
author = UAVCAN Development Team
author_email = pavel.kirienko@zubax.com
url = https://uavcan.org
description = UAVCAN DSDL processing frontend implemented in Python
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
keywords = uavcan, dsdl, parser, compiler
classifiers =
    Intended Audience :: Developers
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Libraries
    Topic :: System :: Distributed Computing
    Topic :: System :: Networking
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3

[options]
zip_safe = False
include_package_data = True
# Search for PEP420 namespace packages, which we use in the third_party directory.
packages = find_namespace:

[options.packages.find]
where = .
include = pydsdl*

[options.package_data]
* = *

# -------------------------------------------------- PYTEST --------------------------------------------------
[tool:pytest]
testpaths        = pydsdl
norecursedirs    = third_party
python_files     = *.py
python_classes   = _UnitTest
python_functions = _unittest_
log_cli          = true
log_cli_level    = WARNING
addopts          = --doctest-modules -v -p no:unraisableexception

# -------------------------------------------------- MYPY --------------------------------------------------
[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any        = True
warn_unused_configs    = True
disallow_untyped_defs  = True
check_untyped_defs     = True
no_implicit_optional   = True
warn_redundant_casts   = True
warn_unused_ignores    = True
show_error_context     = True
strict_equality        = True
implicit_reexport      = False
incremental            = False

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-parsimonious.*]
ignore_errors = True
implicit_reexport = True

[mypy-six]
ignore_errors = True

# -------------------------------------------------- COVERAGE --------------------------------------------------
[coverage:run]
source = pydsdl
branch = True
omit =
    */third_party/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:

# -------------------------------------------------- PYLINT --------------------------------------------------
[pylint.MASTER]
fail-under=9.9

[pylint.MESSAGES CONTROL]
# Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.
confidence=UNDEFINED
# Advanced semantic analysis is broken in PyLint so we just disable these checks since they add nothing but noise.
# These aspects are addressed by MyPy in a more sensible way.
# Formatting issues like superfluous parens are managed by Black automatically.
disable=
    cyclic-import,
    useless-import-alias,
    import-outside-toplevel,
    fixme,
    inconsistent-return-statements,
    unbalanced-tuple-unpacking,
    no-name-in-module,
    superfluous-parens,
    unsubscriptable-object,
    too-few-public-methods

[pylint.REPORTS]
output-format=colorized

[pylint.DESIGN]
max-branches=20

[pylint.FORMAT]
max-line-length=120
max-module-lines=3000

[pylint.BASIC]
bad-names=
variable-rgx=[a-z_][a-z0-9_]*
