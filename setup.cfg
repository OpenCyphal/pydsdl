[metadata]
name = pydsdl
version = attr: pydsdl.__version__
author = UAVCAN Development Team
author_email = pavel.kirienko@zubax.com
url = https://uavcan.org
description = UAVCAN DSDL processing frontend implemented in Python
long_description = file: README.md
long_description_content_type = text/markdown
license = MIT
keywords = uavcan, dsdl, can, can-bus, parser, compiler
classifiers =
    Intended Audience :: Developers
    Topic :: Scientific/Engineering
    Topic :: Software Development :: Embedded Systems
    Topic :: Software Development :: Libraries
    Topic :: System :: Distributed Computing
    Topic :: System :: Networking
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8

[options]
zip_safe = False
include_package_data = True
# Search for PEP420 namespace packages, which we use in the third_party directory.
packages = find_namespace:

[options.package_data]
* = *

[tool:pytest]
norecursedirs    = third_party
python_files     = *.py
python_classes   = _UnitTest
python_functions = _unittest_
log_cli          = true
log_cli_level    = DEBUG
filterwarnings   = error
addopts          = --doctest-modules

[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any        = True
warn_unused_configs    = True
disallow_untyped_defs  = True
check_untyped_defs     = True
no_implicit_optional   = True
warn_redundant_casts   = True
warn_unused_ignores    = True
show_error_context     = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-parsimonious.*]
ignore_errors = True

[mypy-six]
ignore_errors = True

[coverage:run]
branch = True
omit =
    */third_party/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:

[pycodestyle]
# E221 multiple spaces before operator
# E241 multiple spaces after ':'
# E704 multiple statements on one line (def)
ignore = E221, E241, E704
max-line-length = 120
exclude = third_party, __init__.py
