# https://www.appveyor.com/blog/2018/04/25/specialized-build-matrix-configuration-in-appveyor/
# https://www.appveyor.com/docs/job-workflows/
# https://www.appveyor.com/docs/how-to/git-push/
environment:
  matrix:
    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      PYTHON: "C:\\Python310-x64"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: macos
      PYTHON: "3.9"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.10"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.9"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.8"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.7"

    - job_group: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.6"

    - job_name: deploy
      job_depends_on: tests
      APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu2004
      PYTHON: "3.10"

  GIT_TOKEN:
    secure: +jQhxLpePj6hdDryfET/XpLo7VL9fhDXVHlwLOPp/nRDYe97TJAfd0XCTuPz1qkT
  TWINE_USERNAME: __token__
  TWINE_PASSWORD:
    secure: +ZVhECKV0ESBrvUGXVd9wpt9xhMMHeIXSJalghKMKGCrxqvvg7/yMm9kPO+xH1T310zzMpnDUxknR1Q05mjAX5MU70MiHiWAB2fBjNwrMSTQZP4kCpKtznAIM/iCwVczbNolbB3tsUn4OS3rQjXyz7lUdYnaeM7sqF1IZNj55/spCPsAJUmi5DYj8M+6zkaPdCZEswlH7lARJG1g+l4/tbyiBssuyDdmY0AQxJVXDGBXKeHU8frHrWayEI5holjF+oFwx2b6Fz1zZ7uznrGpDQ==

stack: python %PYTHON%
build: off
skip_tags: true

for:
  # TEST PIPELINE
  - matrix:
      only:
        - job_group: tests
    install:
      # MS Windows config.
      - cmd: 'SET PATH=%PYTHON%;%PATH%'
      - cmd: 'SET PATH=%PYTHON%\\Scripts;%PATH%'
      - cmd: 'echo %PATH%'
      # Shared config.
      - python -m pip install --upgrade pip setuptools nox typed_ast
      - python --version
    test_script:
      # GNU/Linux test.
      - sh: nox --non-interactive --error-on-missing-interpreters --session test lint --python $PYTHON
      # skip macOS docs build
      - sh: 'if [ "$APPVEYOR_BUILD_WORKER_IMAGE" != "macos" ]; then nox --non-interactive --session docs; fi'
      # MS Windows test.
      - cmd: nox --forcecolor --non-interactive --error-on-missing-interpreters --session test lint
      # Shared test for all platforms.
      - git clone https://github.com/OpenCyphal/public_regulated_data_types .dsdl-test
      - python -c "import pydsdl; pydsdl.read_namespace('.dsdl-test/uavcan', [])"

  # DEPLOYMENT PIPELINE
  - matrix:
      only:
        - job_name: deploy
    branches:
      only:
        - master
    install:
      - python -m pip install --upgrade pip setuptools wheel twine
    deploy_script:
      # Ensure we deploy only from master, not from PR builds.
      - '[[ "$APPVEYOR_REPO_BRANCH" == "master" ]] && [[ -z "$APPVEYOR_PULL_REQUEST_HEAD_COMMIT" ]] || exit'
      # Configure git credentials.
      - echo "https://${GIT_TOKEN}:x-oauth-basic@github.com" > ~/.git-credentials
      - git config --global credential.helper store
      - git config --global user.email "devnull@opencyphal.org"
      - git config --global user.name  "Release Automation"
      # Tag and publish this release. Push the tag after the release is out in case it could not be published.
      - 'git tag $(python3 -c "import pydsdl; print(pydsdl.__version__)")'
      - 'python setup.py sdist bdist_wheel'
      - 'python -m twine upload dist/*'
      - 'git push --tags'
